extends ../layout

block content
  .main-nav
    .nav-link
      a(class="external-link" href="/")= i18n.__('Dashboard') 
      | 
      | -> 
      span#nav-text
        =i18n.__('Options')
      img.loader-ico(src="/assets/images/loader_ico.GIF")
  .main-select-option
    select(id="lamination-select" name="" class="select-default selected-option" style="width: 180px;")
      option(value="1" selected)=i18n.__('Lamination')
      option(value="2")=i18n.__('Discounts')
      option(value="3")=i18n.__('Coefficients')
      option(value="8")=i18n.__('Suppliers')
      option(value="9")=i18n.__('Currency')
      option(value="10")=i18n.__('General options')
      option(value="11")=i18n.__('Application options')
      option(disabled)=i18n.__('Groups')
      option(value="4")=i18n.__('Glazed window')
      option(value="5")=i18n.__('Window sills')
      option(value="6")=i18n.__('Spillways')
      option(value="7")=i18n.__('Visors')
      option(value="12")=i18n.__('Connectors')
      option(value="13")=i18n.__('Mosquitos')
      option(value="14")=i18n.__('Doorhandles')
      option(value="15")=i18n.__('Decors')
      option(value="16")=i18n.__('Others')
  form(method='post' action='/base/option/save' id="main-form")
    .lamination-option.checked-option
      .main-content
        .content-wrap
          .btn-wrapp
            .add-button
              a(href="#" id="add-lamination-group")
                span#add-lamination-group-text
                  =i18n.__('Add group +') 
            #content-footer-save-lamination
              a(class="external-link" href="#" id="saveBtn", )
                span#saveBtnText
                  =i18n.__('Save')
          .lamination-color-items
            .lamination-color.default-white
              input(id="checkbox00001" type="checkbox", value=1, disabled, checked)
              label(for="checkbox00001")
                =i18n.__('White')
              br
              img(src="/assets/images/lamination_colors/white.jpg" class="b-img-radius" width="200" height="70")

            //- if (laminationsFactory)
            //-   - var defaults = []
            //-   each laminationFactory in laminationsFactory
            //-     - defaults.push(laminationFactory.lamination_default_color.id)
            //-     .lamination-color
            //-       input.laminations-cb(id="checkbox" + laminationFactory.id, type="checkbox", data-delete-lamin=laminationFactory.id, value=laminationFactory.lamination_default_color.id, checked)
            //-       label(for="checkbox" + laminationFactory.id)
            //-         .editable-lamination
            //-           =laminationFactory.name
            //-       select.lamination-folders.select-default(name="new-lamination-folder")
            //-         each lamination_folder in lamination_folders 
            //-           if (lamination_folder.id == laminationFactory.lamination_folders_id)
            //-             option(data-lamination=laminationFactory.id value=lamination_folder.id selected)=lamination_folder.name
            //-           else 
            //-             option(data-lamination=laminationFactory.id value=lamination_folder.id)=lamination_folder.name 
            //-       br
            //-       img(src=laminationFactory.lamination_default_color.url, class="b-img-radius" width="200" height="160")
            //-       .country-check-lamination
            //-         each country in countries 
            //-           .country-item
            //-             input(type="checkbox" id="country-checkbox" + country.id + laminationFactory.id, name="checkLamination", data-lamination-id=laminationFactory.id, value=country.id, checked=laminationFactory.country_ids.includes(country.id)?true:false)
            //-             label(for="country-checkbox" + country.id + laminationFactory.id) 
            //-               =country.name


            //- each laminationColor in laminationsDefault
            //-   if (defaults.indexOf(laminationColor.id) < 0)
            //-     if (laminationColor.id !== 1)
            //-       .lamination-color
            //-         input.laminations-cb(id="checkbox00" + laminationColor.id, type="checkbox", value=laminationColor.id)
            //-         label(for="checkbox00" + laminationColor.id)
            //-           .editable-lamination
            //-             =laminationColor.name
            //-         br
            //-         img(src=laminationColor.url, class="b-img-radius" width="200" height="160")

            each lamination_folder, index in lamination_folders
              .lamination-folder(class= (index === lamination_folders.length - 1 ? "last-folder" : "")) 
                .folder-name
                  //- =lamination_folder.name
                  = lamination_folder.id == 0 ? i18n.__('Group') + " " + i18n.__('Not exist') : lamination_folder.name
                if (lamination_folder.id !== 0)
                  .btn-delete-lamination-folder(data-folder=lamination_folder.id)
                  .lamination-folder-edit(data-folder=lamination_folder.id)

                if (laminationsFactory)
                  .folder-colors(class= (lamination_folder.id == 0 ? "open" : ""))
                    each laminationFactory in laminationsFactory
                      if (lamination_folder.id === laminationFactory.lamination_folders_id)
                        - var findFolder = lamination_folders.find( function(folder) {return  folder.id === laminationFactory.lamination_folders_id} )
                        - var findDecor = decor_colors.find( function(color) {return  color.id === laminationFactory.addition_colors_id} )
                        .lamination-color
                          input.laminations-cb(id="checkbox" + laminationFactory.id, type="checkbox", data-delete-lamin=laminationFactory.id, value=laminationFactory.lamination_default_color.id, checked)
                          label(for="checkbox" + laminationFactory.id)
                            .editable-lamination
                              //- =laminationFactory.name
                          span.lamination-name
                              =laminationFactory.name
                          .info-lamination-wrap
                            span.lamination-info-title
                               =i18n.__('Position')
                            span.lamination-info-position.lamination-info-value= laminationFactory.position 
                            span.lamination-info-title
                               =i18n.__('Group')
                            span.lamination-info-folder-name.lamination-info-value= findFolder.name
                            span.lamination-info-title
                               =i18n.__('Decors')
                            span.lamination-info-decor.lamination-info-value= findDecor.name
                          //- select.lamination-folders.select-default(name="new-lamination-folder")
                          //-   each lamination_folder in lamination_folders 
                          //-     if (lamination_folder.id == laminationFactory.lamination_folders_id)
                          //-       option(data-lamination=laminationFactory.id value=lamination_folder.id selected)=lamination_folder.name
                          //-     else 
                          //-       option(data-lamination=laminationFactory.id value=lamination_folder.id)=lamination_folder.name 
                          br
                          .lamination-settings-edit(data-lamination=laminationFactory.id) 
                          img(src=laminationFactory.lamination_default_color.url, class="b-img-radius" width="200" height="160")
                          .country-check-lamination
                            each country in countries 
                              .country-item
                                input(type="checkbox" id="country-checkbox" + country.id + laminationFactory.id, name="checkLamination", data-lamination-id=laminationFactory.id, value=country.id, checked=laminationFactory.country_ids.includes(country.id)?true:false)
                                label(for="country-checkbox" + country.id + laminationFactory.id) 
                                  =country.name
            .add-button
              a(href="#" id="add-lamination-color")
                span#add-lamination-color-text
                  =i18n.__('Add') + " " + i18n.__('Color') 
            .border Inactive colors
            each laminationColor in laminationsDefault
              if (arrLaminIds.indexOf(laminationColor.id) < 0)
                if (laminationColor.id !== 1)
                  .lamination-color
                    input.laminations-cb(id="checkbox00" + laminationColor.id, type="checkbox", value=laminationColor.id)
                    label(for="checkbox00" + laminationColor.id)
                      .editable-lamination
                        =laminationColor.name
                    br
                    img(src=laminationColor.url, class="b-img-radius" width="200" height="160")    
                    .lamination-color-edit(data-color=laminationColor.id)                
          //- .add-button
          //-   a(href="#" id="add-lamination-color")
          //-     span#add-lamination-color-text
          //-       =i18n.__('Color') + " " + "+"

      //- .content-footer
        
  include includes/lamination-add-group.jade
  include includes/lamination-settings-edit.jade
  include includes/lamination-edit-color.jade
  include includes/lamination-add-color.jade
  include includes/lamination-edit-gropu.jade
  include includes/alert-delete-lamination-folder.jade


